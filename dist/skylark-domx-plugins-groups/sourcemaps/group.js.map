{"version":3,"sources":["group.js"],"names":["define","langx","$","elmx","plugins","groups","Group","Plugin","inherit","klassName","pluginName","options","classes","selectors","item","template","selector","selectable","multiSelect","base","selected","active","data","_construct","elm","this","overrided","self","velm","_velm","_elm","itemSelector","on","hasClass","value","getItemValue","setActiveItem","toggleSelectOneItem","clearSelectedItems","selectOneItem","resetItems","items","addItems","_$items","findItem","valueOrIdx","isNumber","eq","isString","filter","getItems","$item","undefined","index","getItemsCount","size","getItemIndex","isSelectedItem","addClass","unselectOneItem","removeClass","selectedClass","getSelectedItemValues","map","el","getSelectedItems","setSelectedItems","force","isArray","i","length","getActiveItem","activeClass","current","next","getSelectedItem","addItem","itemData","itemHtml","renderItemHtml","baseClass","_$itemsContainer","append","_renderItemHtml","itemTpl","isFunction","register"],"mappings":"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","file":"../group.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./groups\"\r\n],function(langx,$,elmx,plugins,groups){\r\n  'use strict'\r\n\r\n    /*\r\n     * The base plugin class for grouping items.\r\n     */\r\n    var Group = plugins.Plugin.inherit({\r\n        klassName : \"Group\",\r\n\r\n        pluginName : \"lark.groups.group\",\r\n\r\n        options : {\r\n        \tclasses : {\r\n        \t},\r\n\r\n        \tselectors : {\r\n            //container : \"ul\", // \r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            selector : \"li\",      // \".list-group-item\"\r\n\r\n            selectable: false,\r\n            multiSelect: false,\r\n\r\n            classes : {\r\n              base : \"item\",\r\n              selected : \"selected\",\r\n              active : \"active\"\r\n            }\r\n          },\r\n\r\n          data : {},\r\n          //active : 0,\r\n\r\n          //A collection or function that is used to generate the content of the group \r\n          /*\r\n           * example1\r\n           *itemsSource : [{  \r\n           *  type: 'image',href : \"https://xxx.com/1.jpg\",title : \"1\"\r\n           *},{\r\n           *  type: 'image',href : \"https://xxx.com/1.jpg\",title : \"1\"\r\n           * }],\r\n           */\r\n          /*\r\n           * example2\r\n           *itemsSource :  function(){},\r\n           */\r\n        },\r\n\r\n        selected : null,\r\n \r\n        _construct : function(elm,options) {\r\n            this.overrided(elm,options);\r\n            var self = this,\r\n                velm = this._velm = elmx(this._elm),\r\n                itemSelector = this.options.item.selector;\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = elmx(this);\r\n                if (!veItem.hasClass('disabled')) {\r\n                    let value = self.getItemValue(this);\r\n                    self.setActiveItem(value);\r\n\r\n                  if (self.options.item.selectable) {\r\n\r\n                      if (self.options.item.multiSelect) {\r\n                        self.toggleSelectOneItem(value);\r\n                      } else {\r\n                        self.clearSelectedItems();\r\n                        self.selectOneItem(value);\r\n                      }\r\n                  }\r\n\r\n                }\r\n\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n\r\n            this.resetItems();\r\n\r\n            if (this.options.data.items) {\r\n                this.addItems(this.options.data.items);\r\n            }\r\n\r\n            ///if (this.options.item.multiSelect) {\r\n            ///  this.selected = [];\r\n            ///} else {\r\n            ///  this.selected = null;\r\n            ///}\r\n            ///this.selected = this.options.selected;\r\n        },\r\n\r\n        resetItems : function() {\r\n            this._$items = this._velm.$(this.options.item.selector);\r\n        },\r\n\r\n        findItem : function (valueOrIdx) {\r\n          var $item;\r\n          if (langx.isNumber(valueOrIdx)) {\r\n            $item = this._$items.eq(valueOrIdx);\r\n          } else if (langx.isString(valueOrIdx)) {\r\n            $item = this._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n          } else {\r\n            $item = $(valueOrIdx);\r\n          }\r\n          return $item[0];\r\n        },\r\n\r\n        getItems : function() {\r\n          return this._$items;\r\n        },\r\n\r\n        getItemValue : function(item) {\r\n          let $item = $(item),\r\n              value = $item.data(\"value\");\r\n          if (value === undefined) {\r\n            value = this._$items.index($item[0]);\r\n          }\r\n          return value;\r\n        },\r\n\r\n        getItemsCount : function() {\r\n            return this._$items.size();\r\n        },\r\n\r\n        getItemIndex : function(item) {\r\n            return this._$items.index(item);\r\n        },\r\n\r\n        \r\n        isSelectedItem : function(valueOrIdx) {\r\n          return $(this.findItem(valueOrIdx)).hasClass(this.options.item.classes.selected);\r\n        },\r\n                 \r\n        selectOneItem : function (valueOrIdx) {\r\n          $(this.findItem(valueOrIdx)).addClass(this.options.item.classes.selected);\r\n        },\r\n\r\n        unselectOneItem : function (valueOrIdx) {\r\n          $(this.findItem(valueOrIdx)).removeClass(this.options.item.classes.selected);\r\n        },\r\n\r\n        /*\r\n         * clears the selected items.\r\n         */\r\n        clearSelectedItems : function() {\r\n          let selectedClass = this.options.item.classes.selected;\r\n          this._$items.filter(`.${selectedClass}`).removeClass(selectedClass);\r\n        },\r\n\r\n        getSelectedItemValues : function() {\r\n          let selectedClass = this.options.item.classes.selected;\r\n          return  this._$items.filter(`.${selectedClass}`).map( (el) => {\r\n            return this.getItemValue(el);\r\n          });\r\n        },\r\n\r\n        getSelectedItems : function() {\r\n          let selectedClass = this.options.item.classes.selected;\r\n          return  this._$items.filter(`.${selectedClass}`);\r\n        },\r\n\r\n        setSelectedItems : function(items, force) {\r\n            if (!langx.isArray(items)) {\r\n                items = [items];\r\n            }\r\n\r\n            this.clearSelectedItems();\r\n            for (var i = 0; i < items.length; i++) {\r\n              this.selectOneItem(items[i]);\r\n            }\r\n        },\r\n        \r\n        getActiveItem : function() {\r\n          let activeClass = this.options.item.classes.active,\r\n              $activeItem = this._$items.filter(`.${activeClass}`);\r\n          return $activeItem[0] || null;\r\n        },\r\n\r\n        setActiveItem : function(valueOrIdx) {\r\n          let current = this.getActiveItem(),\r\n              next = this.findItem(valueOrIdx);\r\n          if (next != current) {\r\n            let activeClass = this.options.item.classes.active;\r\n            $(current).removeClass(activeClass);\r\n            $(next).addClass(activeClass);\r\n          }\r\n        },\r\n\r\n\r\n        getSelectedItem : function() {\r\n          let selectedItems = this.getSelectedItems();\r\n          return selectedItems[0] || null;\r\n        },\r\n\r\n        toggleSelectOneItem : function(valueOrIdx) {\r\n          if (this.isSelectedItem(valueOrIdx)) {\r\n            this.unselectOneItem(valueOrIdx);\r\n          } else {\r\n            this.selectOneItem(valueOrIdx);\r\n          }\r\n        },\r\n\r\n\r\n        addItems : function(items) {\r\n            let index = this.getItemsCount();\r\n            for (var i=0; i<items.length;i++) {\r\n              this.addItem(index++,items[i]);\r\n            }\r\n            this.resetItems();\r\n        },\r\n\r\n        addItem : function(index,itemData) {\r\n          let itemHtml = this.renderItemHtml(itemData),\r\n              baseClass = this.options.item.classes.base;\r\n\r\n\r\n          let $item = $(itemHtml);\r\n          if (baseClass) {\r\n            $item.addClass(baseClass);\r\n          }\r\n\r\n          if (this._$itemsContainer) {\r\n            this._$itemsContainer.append($item);\r\n          } else {\r\n            this.$().append($item);\r\n          }\r\n        },\r\n\r\n        renderItemHtml : function(itemData) {\r\n          if (!this._renderItemHtml) {\r\n            let itemTpl = this.options.item.template;\r\n            if (langx.isString(itemTpl)) {\r\n              this._renderItemHtml = langx.template(itemTpl);\r\n            } else if (langx.isFunction(itemTpl)) {\r\n              this._renderItemHtml = itemTpl;\r\n            }\r\n          }\r\n\r\n          return this._renderItemHtml(itemData);\r\n        }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Group);\r\n\r\n  return groups.Group = Group;\r\n\r\n});\r\n\r\n\r\n\r\n"]}